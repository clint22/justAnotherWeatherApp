apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

// Read credentials
def credentialFile = rootProject.file("apiKey.properties")
def credentialProperty = new Properties()
credentialProperty.load(new FileInputStream(credentialFile))

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion "29.0.3"

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    viewBinding {
        enabled = true
    }
    dataBinding {
        enabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    defaultConfig {
        applicationId "com.ducttapeprogrammer.myapplication"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "WEATHER_API_KEY", credentialProperty['WEATHER_API_KEY'])
        buildConfigField("String", "GOOGLE_PLACES_API_KEY", credentialProperty['GOOGLE_PLACES_API_KEY'])

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

//    Architecture
    kapt "androidx.lifecycle:lifecycle-compiler:$kaptVersion"

//    Local Unit testing
    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"

//    Instrumentation testing
    androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCore"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"

//    Navigation component
    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Dynamic Feature Module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

//    ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModelVersion"
//    LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$liveDataVersion"
//    Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineCoreVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineAndroidVersion"
//    Gson
    implementation "com.squareup.retrofit2:converter-gson:$gsonConverterVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
//    OkHttp3
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation("com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion")
//    Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
//    Lottie Animation
    implementation "com.airbnb.android:lottie:$lottieVersion"
//    Preference manager
    implementation "androidx.preference:preference-ktx:$preferenceVersion"
//    Hamcrest
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
//    Intuit - dimen library
    implementation "com.intuit.sdp:sdp-android:$intuitVersion"
//    Timber - logging library
    implementation "com.jakewharton.timber:timber:$timberVersion"
//    Google places
    implementation "com.google.android.libraries.places:places:$googlePlacesVersion"
//    Room components
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
}
